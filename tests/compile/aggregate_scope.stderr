error: lifetime may not live long enough
 --> tests/compile/aggregate_scope.rs:9:5
  |
3 | fn columns<'outer, 'inner, S: 'static>(
  |            ------  ------ lifetime `'inner` defined here
  |            |
  |            lifetime `'outer` defined here
...
9 |     aggr.filter_on(outer, 10);
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^ argument requires that `'outer` must outlive `'inner`
  |
  = help: consider adding the following bound: `'outer: 'inner`
  = note: requirement occurs because of a mutable reference to `Aggregate<'_, '_, S>`
  = note: mutable references are invariant over their type parameter
  = help: see <https://doc.rust-lang.org/nomicon/subtyping.html> for more information about variance

error: lifetime may not live long enough
  --> tests/compile/aggregate_scope.rs:10:5
   |
3  | fn columns<'outer, 'inner, S: 'static>(
   |            ------  ------ lifetime `'inner` defined here
   |            |
   |            lifetime `'outer` defined here
...
10 |     aggr.filter_on(10, inner);
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^ argument requires that `'inner` must outlive `'outer`
   |
   = help: consider adding the following bound: `'inner: 'outer`
   = note: requirement occurs because of a mutable reference to `Aggregate<'_, '_, S>`
   = note: mutable references are invariant over their type parameter
   = help: see <https://doc.rust-lang.org/nomicon/subtyping.html> for more information about variance

help: `'outer` and `'inner` must be the same: replace one with the other

error: lifetime may not live long enough
  --> tests/compile/aggregate_scope.rs:17:5
   |
13 | fn sum<'outer, 'inner, S: 'static>(
   |        ------  ------ lifetime `'inner` defined here
   |        |
   |        lifetime `'outer` defined here
...
17 |     aggr.sum(outer);
   |     ^^^^^^^^^^^^^^^ argument requires that `'outer` must outlive `'inner`
   |
   = help: consider adding the following bound: `'outer: 'inner`
   = note: requirement occurs because of the type `Aggregate<'_, '_, S>`, which makes the generic argument `'_` invariant
   = note: the struct `Aggregate<'outer, 'inner, S>` is invariant over the parameter `'outer`
   = help: see <https://doc.rust-lang.org/nomicon/subtyping.html> for more information about variance
