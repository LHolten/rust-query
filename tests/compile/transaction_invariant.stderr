error[E0521]: borrowed data escapes outside of closure
  --> tests/compile/transaction_invariant.rs:18:9
   |
14 |     let txn = client.transaction(&db);
   |         --- `txn` declared here, outside of the closure body
15 |     let name = txn.query(|rows| {
   |                           ---- `rows` is a reference that is only valid in the closure body
...
18 |         txn.query_one(&item.name)
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^ `rows` escapes the closure body here
   |
   = note: requirement occurs because of the type `Transaction<'_, v0::Schema>`, which makes the generic argument `'_` invariant
   = note: the struct `Transaction<'t, S>` is invariant over the parameter `'t`
   = help: see <https://doc.rust-lang.org/nomicon/subtyping.html> for more information about variance
